---
resource_types:
  - name: terraform
    type: docker-image
    source:
      repository: ljfranklin/terraform-resource
      tag: 1.2.3

resources:
  - name: bosh-training-infra
    type: git
    icon: github
    source:
      uri: https://github.com/EngineerBetter/bosh-training-infra

  - name: bosh-deployment
    type: git
    icon: github
    check_every: 60m
    source:
      uri: https://github.com/cloudfoundry/bosh-deployment

  - name: shared-terraform-state
    type: terraform
    icon: terraform
    source:
      backend_type: s3
      env_name: default
      backend_config:
        bucket: ((bucket_name))
        key: terraform/shared
        region: ((region))
        access_key: ((concourse_ci_s3_access_key))
        secret_key: ((concourse_ci_s3_secret_key))

  - name: students-terraform-state
    type: terraform
    icon: terraform
    source:
      backend_type: s3
      env_name: default
      backend_config:
        bucket: ((bucket_name))
        key: terraform/students
        region: ((region))
        access_key: ((concourse_ci_s3_access_key))
        secret_key: ((concourse_ci_s3_secret_key))

  - name: director-states
    type: s3
    source:
      bucket: ((bucket_name))
      region_name: ((region))
      versioned_file: director-states/states.tgz
      access_key_id: ((concourse_ci_s3_access_key))
      secret_access_key: ((concourse_ci_s3_secret_key))

jobs:
  - name: set-pipeline
    plan:
      - get: bosh-training-infra
        trigger: true
      - set_pipeline: training-infra
        file: bosh-training-infra/ci/pipeline.yaml
        var_files: [bosh-training-infra/vars.yaml]

  - name: terraform-shared
    serial: true
    serial_groups: [infrastructure]
    plan:
      - get: bosh-training-infra
        passed: [set-pipeline]
        trigger: true
      - put: shared-terraform-state
        params:
          terraform_source: bosh-training-infra/terraform/shared
          vars:
            region: ((region))
            cs_office_ip: ((cs_office_ip))
            key_name: ((key_name))
            availability_zone: ((region))a
            public_key: ((bosh-training-key.public_key))
            eb_ci_nat_gateway: ((eb_ci_nat_gateway))
          env:
            AWS_ACCESS_KEY_ID: ((concourse_ci_s3_access_key))
            AWS_SECRET_ACCESS_KEY: ((concourse_ci_s3_secret_key))

  - name: terraform-students
    serial: true
    serial_groups: [infrastructure]
    plan:
      - in_parallel:
          - get: bosh-training-infra
            passed: [terraform-shared]
            trigger: true
          - get: shared-terraform-state
      - load_var: shared-terraform-outputs
        file: shared-terraform-state/metadata
        format: json
      - put: students-terraform-state
        params:
          terraform_source: bosh-training-infra/terraform/students
          vars:
            region: ((region))
            vpc_id: ((.:shared-terraform-outputs.vpc_id))
            security_group_id: ((.:shared-terraform-outputs.security_group_id))
            availability_zone: ((region))a
            nat_gateway_route_table: ((.:shared-terraform-outputs.nat_gateway_route_table))
          var_files: [bosh-training-infra/students.auto.tfvars]
          env:
            AWS_ACCESS_KEY_ID: ((concourse_ci_s3_access_key))
            AWS_SECRET_ACCESS_KEY: ((concourse_ci_s3_secret_key))

  - name: create-student-envs
    serial: true
    plan:
      - in_parallel:
          - get: bosh-deployment
          - get: bosh-training-infra
            trigger: true
            passed: [terraform-students]
          - get: students-terraform-state
          - get: shared-terraform-state
          - get: director-states
            params: { unpack: true }
      - load_var: shared-terraform-outputs
        file: shared-terraform-state/metadata
        format: json
      - task: create-envs
        file: bosh-training-infra/ci/tasks/create-envs.yaml
        params:
          AWS_ACCESS_KEY_ID: ((concourse_ci_s3_access_key))
          AWS_SECRET_ACCESS_KEY: ((concourse_ci_s3_secret_key))
          DEFAULT_KEY_NAME: ((key_name))
          PRIVATE_KEY: ((bosh-training-key.private_key))
          BASTION_IP: ((.:shared-terraform-outputs.bastion_ip))
        ensure:
          do:
            - task: compress-state
              file: bosh-training-infra/ci/tasks/compress.yaml
              input_mapping: { target: director-states }
              vars: { files: creds-*.yml state-*.json }
            - put: director-states
              params: { file: compressed/archive.tgz }
              get_params: { unpack: true }
      - task: update-runtime-configs
        file: bosh-training-infra/ci/tasks/runtime-config.yaml
        params:
          PRIVATE_KEY: ((bosh-training-key.private_key))
          BASTION_IP: ((.:shared-terraform-outputs.bastion_ip))
